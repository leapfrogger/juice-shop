name: leapfrogger's juiceshop Build and Publish

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  id-token: write
  contents: read
  # Required for uploading code scanning.
  security-events: write

jobs:
  build-publish:
    runs-on: ubuntu-latest

    steps:
      - uses: jfrog/setup-jfrog-cli@v4
        name: Setup JFrog CLI
        id: setup-cli
        with:
          oidc-provider-name: nitin-jfrog-github-oidc
        env:
          ACTIONS_STEP_DEBUG: true
          # [Mandatory]
          # JFrog platform URL
          JF_URL: ${{ vars.JF_URL }}

          # [Mandatory]
          # The GitHub token is automatically generated for the job
          JF_GIT_TOKEN: ${{ secrets.GITHUB_TOKEN }}

          # [Mandatory]
          # The name of the branch on which Frogbot will perform the scan
          JF_GIT_BASE_BRANCH: ${{ matrix.branch }}

          # [Optional, default: "TRUE"]
          # Fails the Frogbot task if any security issue is found.
          JF_FAIL: "FALSE"

      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Jfrog cli version
        run: |
          jf rt ping --url=${{ secrets.JF_URL }}
          jfrog -v

      - name: Build
        run: |
          # Configure your JFrog Platform connection details
          jf c add --url=${{ secrets.JF_URL }} --access-token=${{ secrets.JF_ACCESS_TOKEN }}

          # Configure Docker image name
          # Example: acme.jfrog.io/docker-local/hello-frog:1.0.0
          export DOCKER_IMAGE_NAME=soleng.jfrog.io/nitin-docker-local/juiceshop:1.0.0

          # Configure build name and build number
          export JFROG_CLI_BUILD_NAME=myBuild
          export JFROG_CLI_BUILD_NUMBER=1

          # Build Docker image
          docker build -t $DOCKER_IMAGE_NAME .

          # Scan Docker image for vulnerabilities
          jf docker scan $DOCKER_IMAGE_NAME

          # Push image to Artifactory
          jf docker push $DOCKER_IMAGE_NAME

          # Publish build info
          jf rt build-publish
